{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dineshkumar jha\\\\Desktop\\\\NEOKRED\\\\client\\\\src\\\\components\\\\MarkDownWithServer.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import './MarkDownWithServer.css';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// const socket = io('http://localhost:3001');\n\n// function MarkDownWithServer() {\n//   const [markdownInput, setMarkdownInput] = useState('');\n//   const [htmlOutput, setHtmlOutput] = useState('');\n//   const outputContainerRef = useRef(null);\n\n//   useEffect(() => {\n//     console.log('Connecting to socket server...');\n//     socket.on('connect', () => {\n//       console.log('Socket connected successfully');\n//     });\n\n//     socket.on('disconnect', () => {\n//       console.log('Socket disconnected');\n//     });\n\n//     socket.on('html', (html) => {\n//       console.log('Received HTML from server:', html);\n//       setHtmlOutput(html);\n//       outputContainerRef.current.scrollTop = outputContainerRef.current.scrollHeight;\n//     });\n\n//     return () => {\n//       socket.off('html');\n//     };\n//   }, []);\n\n//   const handleMarkdownChange = (e) => {\n//     const markdown = e.target.value;\n//     console.log('Markdown input changed:', markdown);\n//     setMarkdownInput(markdown);\n//     socket.emit('markdown', markdown);\n//   };\n\n//   const handleCopyCode = () => {\n//     const el = document.createElement('textarea');\n//     el.value = htmlOutput;\n//     document.body.appendChild(el);\n//     el.select();\n//     document.execCommand('copy');\n//     document.body.removeChild(el);\n//   };\n\n//   const handleRenderInNewTab = () => {\n//     const newTab = window.open();\n//     newTab.document.body.innerHTML = htmlOutput;\n//   };\n\n//   const handleWriteToFile = () => {\n//     fetch('http://localhost:3001/file/writeToFile', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ content: htmlOutput }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log('File successfully written:', data);\n//         alert('File successfully written.');\n//       })\n//       .catch((error) => {\n//         console.error('Error writing file:', error);\n//       });\n//   };\n\n//   const handleSaveToMongoDb = () => {\n//       fetch('http://localhost:3001/file/writeToFileAndSaveToMongo', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ content: htmlOutput }),\n//       })\n//         .then((response) => response.json())\n//         .then((data) => {\n//           console.log('File successfully written and saved to MongoDB:', data.savedFile._id);\n//           alert('File successfully written and saved to MongoDB  with document id : ' +data.savedFile._id);\n//         })\n//         .catch((error) => {\n//           console.error('Error writing file and saving to MongoDB:', error);\n//         });\n//     };\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: 'center' }}>Markdown to HTML Converter</h1>\n//       <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\n//         <div style={{ width: '45%', marginRight: '10px' }}>\n//           <h2 style={{ textAlign: 'center' }}>Markdown Input</h2>\n//           <textarea\n//             id=\"markdown-input\"\n//             style={{ width: '100%', height: '350px' }}\n//             value={markdownInput}\n//             onChange={handleMarkdownChange}\n//           ></textarea>\n//         </div>\n//         <div style={{ width: '45%' }}>\n//           <h2 style={{ textAlign: 'center' }}>HTML Output</h2>\n//           <div ref={outputContainerRef} style={{ overflow: 'auto', padding: '10px', border: '1px solid #ccc', height: '338px' }}>\n\n//             {htmlOutput && typeof htmlOutput === 'string' && (\n//               <>\n//                 <button className=\"copy-button\" onClick={handleCopyCode} style={{ marginBottom: '10px' }}>Copy Code</button>\n//                 <button className=\"render-button\" onClick={handleRenderInNewTab} style={{ marginBottom: '10px' }}>Render in New Tab</button>\n//                 <button className=\"write-file-button\" onClick={handleWriteToFile} style={{ marginBottom: '10px' }}>Write to File</button>\n//                 <button className=\"save-to-mongodb-button\" onClick={handleSaveToMongoDb} style={{ marginBottom: '10px' }}>Save to MongoDB</button>\n//               </>\n//             )}\n//             <SyntaxHighlighter language=\"html\" style={solarizedlight}>\n//               {htmlOutput}\n//             </SyntaxHighlighter>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MarkDownWithServer;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './MarkDownWithServer.css';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconst socket = io(process.env.REACT_APP_SOCKET_SERVER);\nfunction MarkDownWithServer() {\n  _s();\n  const [markdownInput, setMarkdownInput] = useState('');\n  const [htmlOutput, setHtmlOutput] = useState('');\n  const outputContainerRef = useRef(null);\n  useEffect(() => {\n    console.log('Connecting to socket server...');\n    socket.on('connect', () => {\n      console.log('Socket connected successfully');\n    });\n    socket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n    socket.on('html', html => {\n      console.log('Received HTML from server:', html);\n      setHtmlOutput(html);\n      outputContainerRef.current.scrollTop = outputContainerRef.current.scrollHeight;\n    });\n    return () => {\n      socket.off('html');\n    };\n  }, []);\n  const handleMarkdownChange = e => {\n    const markdown = e.target.value;\n    console.log('Markdown input changed:', markdown);\n    setMarkdownInput(markdown);\n    socket.emit('markdown', markdown);\n  };\n  const handleCopyCode = () => {\n    const el = document.createElement('textarea');\n    el.value = htmlOutput;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n  const handleRenderInNewTab = () => {\n    const newTab = window.open();\n    newTab.document.body.innerHTML = htmlOutput;\n  };\n  const handleWriteToFile = () => {\n    fetch(`${process.env.REACT_APP_FILE_SERVER}/writeToFile`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: htmlOutput\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('File successfully written:', data);\n      alert('File successfully written.');\n    }).catch(error => {\n      console.error('Error writing file:', error);\n    });\n  };\n  const handleSaveToMongoDb = () => {\n    fetch(`${process.env.REACT_APP_FILE_SERVER}/writeToFileAndSaveToMongo`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: htmlOutput\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('File successfully written and saved to MongoDB:', data.savedFile._id);\n      alert('File successfully written and saved to MongoDB  with document id : ' + data.savedFile._id);\n    }).catch(error => {\n      console.error('Error writing file and saving to MongoDB:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Markdown to HTML Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '45%',\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Markdown Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"markdown-input\",\n          style: {\n            width: '100%',\n            height: '350px'\n          },\n          value: markdownInput,\n          onChange: handleMarkdownChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '45%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"HTML Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: outputContainerRef,\n          style: {\n            overflow: 'auto',\n            padding: '10px',\n            border: '1px solid #ccc',\n            height: '338px'\n          },\n          children: [htmlOutput && typeof htmlOutput === 'string' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-button\",\n              onClick: handleCopyCode,\n              style: {\n                marginBottom: '10px'\n              },\n              children: \"Copy Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"render-button\",\n              onClick: handleRenderInNewTab,\n              style: {\n                marginBottom: '10px'\n              },\n              children: \"Render in New Tab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"write-file-button\",\n              onClick: handleWriteToFile,\n              style: {\n                marginBottom: '10px'\n              },\n              children: \"Write to File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-to-mongodb-button\",\n              onClick: handleSaveToMongoDb,\n              style: {\n                marginBottom: '10px'\n              },\n              children: \"Save to MongoDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            language: \"html\",\n            style: solarizedlight,\n            children: htmlOutput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkDownWithServer, \"s/8wxPpWQN4xg/ZICuVs5lgF/2M=\");\n_c = MarkDownWithServer;\nexport default MarkDownWithServer;\nvar _c;\n$RefreshReg$(_c, \"MarkDownWithServer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Prism","SyntaxHighlighter","solarizedlight","jsxDEV","_jsxDEV","Fragment","_Fragment","require","config","socket","process","env","REACT_APP_SOCKET_SERVER","MarkDownWithServer","_s","markdownInput","setMarkdownInput","htmlOutput","setHtmlOutput","outputContainerRef","console","log","on","html","current","scrollTop","scrollHeight","off","handleMarkdownChange","e","markdown","target","value","emit","handleCopyCode","el","document","createElement","body","appendChild","select","execCommand","removeChild","handleRenderInNewTab","newTab","window","open","innerHTML","handleWriteToFile","fetch","REACT_APP_FILE_SERVER","method","headers","JSON","stringify","content","then","response","json","data","alert","catch","error","handleSaveToMongoDb","savedFile","_id","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","width","marginRight","id","height","onChange","ref","overflow","padding","border","className","onClick","marginBottom","language","_c","$RefreshReg$"],"sources":["C:/Users/dineshkumar jha/Desktop/NEOKRED/client/src/components/MarkDownWithServer.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import './MarkDownWithServer.css';\r\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// import { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n// const socket = io('http://localhost:3001');\r\n\r\n// function MarkDownWithServer() {\r\n//   const [markdownInput, setMarkdownInput] = useState('');\r\n//   const [htmlOutput, setHtmlOutput] = useState('');\r\n//   const outputContainerRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     console.log('Connecting to socket server...');\r\n//     socket.on('connect', () => {\r\n//       console.log('Socket connected successfully');\r\n//     });\r\n\r\n//     socket.on('disconnect', () => {\r\n//       console.log('Socket disconnected');\r\n//     });\r\n\r\n//     socket.on('html', (html) => {\r\n//       console.log('Received HTML from server:', html);\r\n//       setHtmlOutput(html);\r\n//       outputContainerRef.current.scrollTop = outputContainerRef.current.scrollHeight;\r\n//     });\r\n\r\n//     return () => {\r\n//       socket.off('html');\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleMarkdownChange = (e) => {\r\n//     const markdown = e.target.value;\r\n//     console.log('Markdown input changed:', markdown);\r\n//     setMarkdownInput(markdown);\r\n//     socket.emit('markdown', markdown);\r\n//   };\r\n\r\n//   const handleCopyCode = () => {\r\n//     const el = document.createElement('textarea');\r\n//     el.value = htmlOutput;\r\n//     document.body.appendChild(el);\r\n//     el.select();\r\n//     document.execCommand('copy');\r\n//     document.body.removeChild(el);\r\n//   };\r\n\r\n//   const handleRenderInNewTab = () => {\r\n//     const newTab = window.open();\r\n//     newTab.document.body.innerHTML = htmlOutput;\r\n//   };\r\n\r\n//   const handleWriteToFile = () => {\r\n//     fetch('http://localhost:3001/file/writeToFile', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ content: htmlOutput }),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log('File successfully written:', data);\r\n//         alert('File successfully written.');\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error writing file:', error);\r\n//       });\r\n//   };\r\n\r\n//   const handleSaveToMongoDb = () => {\r\n//       fetch('http://localhost:3001/file/writeToFileAndSaveToMongo', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ content: htmlOutput }),\r\n//       })\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//           console.log('File successfully written and saved to MongoDB:', data.savedFile._id);\r\n//           alert('File successfully written and saved to MongoDB  with document id : ' +data.savedFile._id);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error writing file and saving to MongoDB:', error);\r\n//         });\r\n//     };\r\n    \r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ textAlign: 'center' }}>Markdown to HTML Converter</h1>\r\n//       <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\r\n//         <div style={{ width: '45%', marginRight: '10px' }}>\r\n//           <h2 style={{ textAlign: 'center' }}>Markdown Input</h2>\r\n//           <textarea\r\n//             id=\"markdown-input\"\r\n//             style={{ width: '100%', height: '350px' }}\r\n//             value={markdownInput}\r\n//             onChange={handleMarkdownChange}\r\n//           ></textarea>\r\n//         </div>\r\n//         <div style={{ width: '45%' }}>\r\n//           <h2 style={{ textAlign: 'center' }}>HTML Output</h2>\r\n//           <div ref={outputContainerRef} style={{ overflow: 'auto', padding: '10px', border: '1px solid #ccc', height: '338px' }}>\r\n          \r\n//             {htmlOutput && typeof htmlOutput === 'string' && (\r\n//               <>\r\n//                 <button className=\"copy-button\" onClick={handleCopyCode} style={{ marginBottom: '10px' }}>Copy Code</button>\r\n//                 <button className=\"render-button\" onClick={handleRenderInNewTab} style={{ marginBottom: '10px' }}>Render in New Tab</button>\r\n//                 <button className=\"write-file-button\" onClick={handleWriteToFile} style={{ marginBottom: '10px' }}>Write to File</button>\r\n//                 <button className=\"save-to-mongodb-button\" onClick={handleSaveToMongoDb} style={{ marginBottom: '10px' }}>Save to MongoDB</button>\r\n//               </>\r\n//             )}\r\n//             <SyntaxHighlighter language=\"html\" style={solarizedlight}>\r\n//               {htmlOutput}\r\n//             </SyntaxHighlighter>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MarkDownWithServer;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './MarkDownWithServer.css';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst socket = io(process.env.REACT_APP_SOCKET_SERVER);\r\n\r\nfunction MarkDownWithServer() {\r\n  const [markdownInput, setMarkdownInput] = useState('');\r\n  const [htmlOutput, setHtmlOutput] = useState('');\r\n  const outputContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Connecting to socket server...');\r\n    socket.on('connect', () => {\r\n      console.log('Socket connected successfully');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n    });\r\n\r\n    socket.on('html', (html) => {\r\n      console.log('Received HTML from server:', html);\r\n      setHtmlOutput(html);\r\n      outputContainerRef.current.scrollTop = outputContainerRef.current.scrollHeight;\r\n    });\r\n\r\n    return () => {\r\n      socket.off('html');\r\n    };\r\n  }, []);\r\n\r\n  const handleMarkdownChange = (e) => {\r\n    const markdown = e.target.value;\r\n    console.log('Markdown input changed:', markdown);\r\n    setMarkdownInput(markdown);\r\n    socket.emit('markdown', markdown);\r\n  };\r\n\r\n  const handleCopyCode = () => {\r\n    const el = document.createElement('textarea');\r\n    el.value = htmlOutput;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n  };\r\n\r\n  const handleRenderInNewTab = () => {\r\n    const newTab = window.open();\r\n    newTab.document.body.innerHTML = htmlOutput;\r\n  };\r\n\r\n  const handleWriteToFile = () => {\r\n    fetch(`${process.env.REACT_APP_FILE_SERVER}/writeToFile`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ content: htmlOutput }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('File successfully written:', data);\r\n        alert('File successfully written.');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error writing file:', error);\r\n      });\r\n  };\r\n\r\n  const handleSaveToMongoDb = () => {\r\n    fetch(`${process.env.REACT_APP_FILE_SERVER}/writeToFileAndSaveToMongo`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ content: htmlOutput }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('File successfully written and saved to MongoDB:', data.savedFile._id);\r\n        alert('File successfully written and saved to MongoDB  with document id : ' + data.savedFile._id);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error writing file and saving to MongoDB:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>Markdown to HTML Converter</h1>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\r\n        <div style={{ width: '45%', marginRight: '10px' }}>\r\n          <h2 style={{ textAlign: 'center' }}>Markdown Input</h2>\r\n          <textarea\r\n            id=\"markdown-input\"\r\n            style={{ width: '100%', height: '350px' }}\r\n            value={markdownInput}\r\n            onChange={handleMarkdownChange}\r\n          ></textarea>\r\n        </div>\r\n        <div style={{ width: '45%' }}>\r\n          <h2 style={{ textAlign: 'center' }}>HTML Output</h2>\r\n          <div ref={outputContainerRef} style={{ overflow: 'auto', padding: '10px', border: '1px solid #ccc', height: '338px' }}>\r\n            {htmlOutput && typeof htmlOutput === 'string' && (\r\n              <>\r\n                <button className=\"copy-button\" onClick={handleCopyCode} style={{ marginBottom: '10px' }}>Copy Code</button>\r\n                <button className=\"render-button\" onClick={handleRenderInNewTab} style={{ marginBottom: '10px' }}>Render in New Tab</button>\r\n                <button className=\"write-file-button\" onClick={handleWriteToFile} style={{ marginBottom: '10px' }}>Write to File</button>\r\n                <button className=\"save-to-mongodb-button\" onClick={handleSaveToMongoDb} style={{ marginBottom: '10px' }}>Save to MongoDB</button>\r\n              </>\r\n            )}\r\n            <SyntaxHighlighter language=\"html\" style={solarizedlight}>\r\n              {htmlOutput}\r\n            </SyntaxHighlighter>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarkDownWithServer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}