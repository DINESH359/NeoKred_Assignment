{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dineshkumar jha\\\\Desktop\\\\NEOKRED\\\\markdowntohtml\\\\src\\\\components\\\\MarkDownWithServer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './MarkDown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Replace 'http://localhost:3001' with your server URL\n\nfunction MarkDownWithServer() {\n  _s();\n  const [markdownInput, setMarkdownInput] = useState('');\n  const [htmlOutput, setHtmlOutput] = useState('');\n\n  // Send Markdown content to server on input change\n  const handleMarkdownChange = e => {\n    const markdown = e.target.value;\n    setMarkdownInput(markdown);\n    socket.emit('markdown', markdown);\n  };\n\n  // Receive HTML content from server\n  useEffect(() => {\n    socket.on('html', html => {\n      setHtmlOutput(html);\n    });\n    return () => {\n      socket.off('html');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Markdown to HTML Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '49%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Markdown Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"markdown-input\",\n          style: {\n            width: '100%',\n            height: '200px'\n          },\n          value: markdownInput,\n          onChange: handleMarkdownChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '49%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"HTML Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: 'auto',\n            padding: '10px',\n            border: '1px solid #ccc',\n            height: '200px'\n          },\n          children: htmlOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkDownWithServer, \"kYzlgUIB89BhLXNSul1ivsn4qEE=\");\n_c = MarkDownWithServer;\nexport default MarkDownWithServer;\nvar _c;\n$RefreshReg$(_c, \"MarkDownWithServer\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","MarkDownWithServer","_s","markdownInput","setMarkdownInput","htmlOutput","setHtmlOutput","handleMarkdownChange","e","markdown","target","value","emit","on","html","off","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","width","textAlign","id","height","onChange","overflow","padding","border","_c","$RefreshReg$"],"sources":["C:/Users/dineshkumar jha/Desktop/NEOKRED/markdowntohtml/src/components/MarkDownWithServer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './MarkDown.css';\r\n\r\nconst socket = io('http://localhost:3001'); // Replace 'http://localhost:3001' with your server URL\r\n\r\nfunction MarkDownWithServer() {\r\n  const [markdownInput, setMarkdownInput] = useState('');\r\n  const [htmlOutput, setHtmlOutput] = useState('');\r\n\r\n  // Send Markdown content to server on input change\r\n  const handleMarkdownChange = (e) => {\r\n    const markdown = e.target.value;\r\n    setMarkdownInput(markdown);\r\n    socket.emit('markdown', markdown);\r\n  };\r\n\r\n  // Receive HTML content from server\r\n  useEffect(() => {\r\n    socket.on('html', (html) => {\r\n      setHtmlOutput(html);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('html');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Markdown to HTML Converter</h1>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <div style={{ width: '49%' }}>\r\n          <h2 style={{ textAlign: 'center' }}>Markdown Input</h2>\r\n          <textarea\r\n            id=\"markdown-input\"\r\n            style={{ width: '100%', height: '200px' }}\r\n            value={markdownInput}\r\n            onChange={handleMarkdownChange}\r\n          ></textarea>\r\n        </div>\r\n        <div style={{ width: '49%' }}>\r\n          <h2 style={{ textAlign: 'center' }}>HTML Output</h2>\r\n          <div style={{ overflow: 'auto', padding: '10px', border: '1px solid #ccc', height: '200px' }}>\r\n            {htmlOutput}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarkDownWithServer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}